import whisper

model: whisper.Whisper = None

def load_model():
    global model
    print("Loading OpenAI model...")
    model = whisper.load_model("turbo")
    
def transcribe(audio_path: str) -> dict:
    print("Transcribing file...")
    return model.transcribe(audio_path)

def get_ass_format_time(seconds: float) -> str:
    hours = int(seconds // 3600)
    minutes = int((seconds % 3600) // 60)
    secs = int(seconds % 60)
    milliseconds = int((seconds % 1) * 100)
    return f"{hours:01}:{minutes:02}:{secs:02}.{milliseconds:02}"

def save_ass_file(transcription: dict, output_filename: str = "transcription.ass"):
    header = "\n".join([
        "[Script Info]"
        "Title: Transcription",
        "Original Script:",
        "Script Updated By: Transcription Software",
        "Update Details: Autogenerated transcriptions from input file.",
        "ScriptType: v4.00+",
        ""
    ])
    
    events = [
        "",
        "[Events]",
        "Format: Layer,Start,End,Name,Text"
    ]
    
    for segment in transcription["segments"]:
        start = get_ass_format_time(segment["start"])
        end = get_ass_format_time(segment["end"])
        speaker = "unknown"
        text = segment["text"]
        events.append(f"Dialogue: 0,{start},{end},{speaker},{text}")
        
    with open(output_filename, "w", encoding="utf-8") as f:
        f.truncate(0) # clear file
        lines = header
        events = "\n".join(events)
        lines += events
        f.writelines(lines)
        
    return True